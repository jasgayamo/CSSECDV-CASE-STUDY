<%- include('header') %>

<link rel="stylesheet" href="/css/manager.css">

<div class="manager-container">

<h2>Your Posted Products</h2>
<ul id="productList">
  <% products.forEach(p => { %>
    <li id="product-<%= p._id %>">
      <strong><%= p.name %></strong>: <%= p.description %> - â‚±<%= p.price %>
      
      <!-- Edit Link that will trigger the modal -->
      <a href="#" class="edit-product-link" 
         data-id="<%= p._id %>"
         data-name="<%= p.name %>"
         data-description="<%= p.description %>"
         data-price="<%= p.price %>">Edit</a>
          <!-- Delete Link that will trigger the delete confirmation modal -->
      <a href="#" class="delete-product-link" data-id="<%= p._id %>">Delete</a>
      
    </li>
  <% }) %>
</ul>

<p><a href="/manager/products/add">Add New Product</a></p>
<a href="/dashboard"><button type="button">Go to Dashboard</button></a>

<!-- Edit Product Modal -->
<div id="editProductModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <h2>Edit Product</h2>
    <form id="editProductForm" method="POST">
      <input type="hidden" id="editProductId" name="productId">
      <label for="editName">Name:</label>
      <input type="text" id="editName" name="name" required>
      <label for="editDescription">Description:</label>
      <input type="text" id="editDescription" name="description" required>
      <label for="editPrice">Price:</label>
      <input type="number" id="editPrice" name="price" required>
      <button type="submit">Save Changes</button>
    </form>
  </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteConfirmationModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <h2>Are you sure you want to delete this product?</h2>
    <button id="confirmDelete" type="button">Yes, Delete</button>
    <button id="cancelDelete" type="button">Cancel</button>
  </div>
</div>


</div>
<%- include('footer') %>

<script>
  // Modal Handling for Edit Product
  const modal = document.getElementById('editProductModal');
  const closeModal = document.getElementsByClassName('close')[0];

  // Get all edit links
  const editLinks = document.querySelectorAll('.edit-product-link');

  // When an edit link is clicked, open the modal and pre-fill the form
  editLinks.forEach(link => {
    link.addEventListener('click', (e) => {
      e.preventDefault();

      const productId = link.getAttribute('data-id');
      const productName = link.getAttribute('data-name');
      const productDescription = link.getAttribute('data-description');
      const productPrice = link.getAttribute('data-price');

      // Pre-fill the modal form with the selected product's data
      document.getElementById('editProductId').value = productId;
      document.getElementById('editName').value = productName;
      document.getElementById('editDescription').value = productDescription;
      document.getElementById('editPrice').value = productPrice;

      // Show the modal
      modal.style.display = 'block';
    });
  });

  // Close modal when clicking on the close button
  closeModal.addEventListener('click', () => {
    modal.style.display = 'none';
  });

  // Close modal if clicked outside the modal content
  window.onclick = function(event) {
    if (event.target === modal) {
      modal.style.display = 'none';
    }
  };

  // Handle form submission for editing the product via AJAX
  document.getElementById('editProductForm').addEventListener('submit', function(e) {
    e.preventDefault();

    const formData = new FormData(this);
    const productId = formData.get('productId');
    const productName = formData.get('name');
    const productDescription = formData.get('description');
    const productPrice = formData.get('price');

    // Send the updated product details to the server via fetch
    fetch(`/manager/products/edit/${productId}`, {
      method: 'POST',
      body: JSON.stringify({
        name: productName,
        description: productDescription,
        price: productPrice
      }),
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert('Product updated successfully');
        modal.style.display = 'none';
        location.reload(); // Refresh page to show updated data
      } else {
        alert('Failed to update product.');
      }
    })
    .catch(err => {
      console.error('Error updating product:', err);
      alert('Failed to update product.');
    });
  });
</script>

<script>
  // Modal Handling for Delete Product
const deleteModal = document.getElementById('deleteConfirmationModal');
const deleteLinks = document.querySelectorAll('.delete-product-link');
const closeDeleteModal = document.getElementsByClassName('close')[1]; // Close button for delete modal
const confirmDeleteButton = document.getElementById('confirmDelete');
const cancelDeleteButton = document.getElementById('cancelDelete');

let productToDelete = null;

// When a delete link is clicked, open the delete confirmation modal
deleteLinks.forEach(link => {
  link.addEventListener('click', (e) => {
    e.preventDefault();

    const productId = link.getAttribute('data-id');
    productToDelete = productId;

    // Show the delete confirmation modal
    deleteModal.style.display = 'block';
  });
});

// Close the delete modal when clicking on the close button
closeDeleteModal.addEventListener('click', () => {
  deleteModal.style.display = 'none';
});

// Close the delete modal if clicking outside the modal content
window.onclick = function(event) {
  if (event.target === deleteModal) {
    deleteModal.style.display = 'none';
  }
};

// Handle the confirm delete action
confirmDeleteButton.addEventListener('click', () => {
  fetch(`/manager/products/delete/${productToDelete}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json'
    }
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      alert('Product deleted successfully');
      document.getElementById(`product-${productToDelete}`).remove(); // Remove product from the DOM
      deleteModal.style.display = 'none';
    } else {
      alert('Failed to delete product');
    }
  })
  .catch(err => {
    console.error('Error deleting product:', err);
    alert('Failed to delete product');
  });
});

// Handle the cancel delete action
cancelDeleteButton.addEventListener('click', () => {
  deleteModal.style.display = 'none';
});

</script>

